/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_7533(int a0,int a1,int a2,int a3,int a4,int a5) {
	int v4 = 0;
	int v1 = 0;
	int v6 = 0;
	int v8 = 0;
	int v2 = 0;
	int v0 = 0;
	int v3 = 0;
	int v10 = 0;
	int v11 = 0;
	int v13 = 0;
	int v9 = 0;
	int v5 = 0;
	int v7 = 0;
	int v12 = 0;
	if (cs2method_11038(a0, a1) == 1) {
		cs2method_20061(new function<none>() {
		}, "");
		cs2method_10063(0, a4, a2, 0);
		int v25 = cs2method_10878();
		int v24 = cs2method_10406();
		int v16 = cs2method_10488();
		int v31 = cs2method_10664();
		int v29 = v25;
		int v15 = v24;
		int v33 = v16;
		int v21 = v29;
		int v23 = v15;
		int v39 = v21;
		int v14 = cs2method_10461(cs2method_10060(v39, v33), 18);
		int v22 = cs2method_10060(v39, 18);
		int v32 = cs2method_11048(cs2method_10461(v33, 36), 0);
		int v34 = v22;
		int v26 = cs2method_10461(cs2method_10060(v23, v31), 16);
		int v37 = cs2method_10060(v23, 16);
		int v20 = cs2method_11048(cs2method_10461(v31, 32), 0);
		int v18 = v37;
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v39, v23, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3799));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v39, v23, 0, 0);
		cs2method_10097(3253, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v14, v23, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3800));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v14, v23, 0, 0);
		cs2method_10097(3255, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, 16, 0, 0);
		cs2method_10063(v34, v23, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3798));
		cs2method_10577(1);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, 16, 0, 0);
		cs2method_10063(v34, v23, 0, 0);
		cs2method_10577(1);
		cs2method_10097(3254, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, v20, 0, 0);
		cs2method_10063(v39, v18, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3801));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, v20, 0, 0);
		cs2method_10063(v39, v18, 0, 0);
		cs2method_10097(3256, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, v20, 0, 0);
		cs2method_10063(v14, v18, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3803));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, v20, 0, 0);
		cs2method_10063(v14, v18, 0, 0);
		cs2method_10097(3258, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, v20, 0, 0);
		cs2method_10063(v34, v18, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3802));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, v20, 0, 0);
		cs2method_10063(v34, v18, 0, 0);
		cs2method_10097(3257, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v39, v26, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3805));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v39, v26, 0, 0);
		cs2method_10097(3259, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v14, v26, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3806));
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(18, 16, 0, 0);
		cs2method_10063(v14, v26, 0, 0);
		cs2method_10097(3261, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, 16, 0, 0);
		cs2method_10063(v34, v26, 0, 0);
		cs2method_10310(idx22mapAttribute(15047, 3804));
		cs2method_10577(1);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(v32, 16, 0, 0);
		cs2method_10063(v34, v26, 0, 0);
		cs2method_10577(1);
		cs2method_10097(3260, cs2method_11051());
		cs2method_10002(255);
		cs2method_10606(a0, 5, cs2method_10163(a0));
		cs2method_10013(36, 32, 0, 0);
		cs2method_10063(cs2method_10060(v39, 10), cs2method_10060(v23, cs2method_10968(cs2method_10461(v31, 32), 2)), 0, 0);
		cs2method_10356(1);
		cs2method_10278(3153952);
		cs2method_10903(idx22mapAttribute(a3, 3252), 1);
		cs2method_10606(a0, 4, cs2method_10163(a0));
		cs2method_10013(cs2method_10461(v33, cs2method_10060(cs2method_10060(cs2method_10060(10, 36), 2), 10)), v31, 0, 0);
		cs2method_10063(cs2method_10060(cs2method_10060(cs2method_10060(v39, 10), 36), 2), v23, 0, 0);
		cs2method_10692(494);
		cs2method_11105(1, 1, 0);
		cs2method_10811(cs2method_10494(91357204));
		cs2method_10173(1);
		int v38 = idx22mapAttribute(a3, 3248);
		int v27 = idx22mapAttribute(a3, 3249);
		int v17 = v38;
		int v40 = idx17mapData('i', 'i', 7321, v17);
		int v28 = idx17mapData('i', 'i', 7322, v17);
		int v19 = v40;
		int v30 = cs2method_10051(v19, v27);
		int v35 = cs2method_10051(v28, v27);
		int v36 = v30;
		if (idx22mapAttribute(a3, 3251) == 1) {
			int v41 = cs2method_10122(111, 100, v36);
			v35 = cs2method_10122(111, 100, v35);
			v36 = v41;
		}
		script_7535("<col=ffffff>" + (string)cs2method_10379(v27) + " x " + idx17mapData('i', 's', 1563, v17) + "</col>" + "<br>", "<br>" + "<br>" + "Combat XP: " + (string)script_940(cs2method_10968(v36, 10)) + "<br>" + "<u=ff0000>" + "or" + "</u>" + " Coins: " + (string)script_940(v35), idx22mapAttribute(a3, 3250));
		cs2method_20353(new function<script_7541>(int a0,int a1) {
			int v0 = 0;
			if (cs2method_11038(a1, a0) == 1) {
				if (cs2method_11038(a1, interfaceDefsAttribute(3253)) == 1) {
					v0 = cs2method_11048(cs2method_10461(cs2method_10699(), 15), 0);
				}
				script_7543(a1, 15048, v0);
				cs2method_20061(new function<script_7542>(int a0,int a1,int a2) {
					if (cs2method_10133() <= a2 || cs2method_10609(91357196) == 0) {
						return;
					}
					int v0 = 255;
					if (cs2method_11038(a0, a1) == 1) {
						if (cs2method_11038(a0, interfaceDefsAttribute(3253)) == 1) {
							v0 = cs2method_10872(cs2method_10060(cs2method_10699(), 15), 255);
						}
						script_7543(a0, 15048, v0);
						if (v0 >= 255) {
							cs2method_20061(new function<none>() {
							}, "");
						}
					}
					return;
				}, new WidgetPointer(-32768,3), -2147483643, cs2method_10060(cs2method_10133(), 2), "Iii");
			}
			return;
		}, new WidgetPointer(-32768,3), -2147483643, "Ii");
		cs2method_20703(new function<script_7536>(int a0,int a1,int a2,int a3) {
			if (a3 == -1 || a1 == -1) {
				return;
			}
			cs2method_10670(6185, 1, 0, 200);
			for (int v3 = cs2method_10461(cs2method_10924(a3), 1); v3 >= 0; v3 = cs2method_10461(v3, 1)) {
				if (cs2method_11038(a0, v3) == 1) {
					if (v3 == a2) {
						script_7543(a0, 15050, 0);
						cs2method_20061(new function<script_7542>(int a0,int a1,int a2) {
							if (cs2method_10133() <= a1 || cs2method_10609(91357196) == 0) {
								return;
							}
							int v0 = 255;
							if (cs2method_11038(a0, a2) == 1) {
								if (cs2method_11038(a0, interfaceDefsAttribute(3253)) == 1) {
									v0 = cs2method_10872(cs2method_10060(cs2method_10699(), 15), 255);
								}
								script_7543(a0, 15048, v0);
								if (v0 >= 255) {
									cs2method_20061(new function<none>() {
									}, "");
								}
							}
							return;
						}, new WidgetPointer(-32768,3), -2147483643, 0, "Iii");
					} else {
						script_7543(a0, 15048, 255);
						cs2method_20061(new function<none>() {
						}, "");
					}
				}
			}
			cs2method_10121(idx22mapAttribute(a1, 3252), 1, 91357200);
			object v5 = "<col=ffffff>" + (string)cs2method_10379(idx22mapAttribute(a1, 3249)) + " x " + idx17mapData('i', 's', 1563, idx22mapAttribute(a1, 3248)) + "</col>" + "<br>";
			int v1 = idx22mapAttribute(a1, 3250);
			object v0 = "Level " + (string)cs2method_10379(v1) + " Slayer";
			object v2 = "<br>" + "<br>" + "You need to carry the scroll to make progress on the contract. Kills that are counted towards this contract cannot also count towards a Slayer assignment." + "<br>" + "<br>" + "You will receive Slayer XP for each contract kill: " + "<col=ffffff>" + (string)cs2method_10379(20) + "%" + "</col>" + " of the amount you'd have received on a Slayer assignment.";
			int v4 = cs2method_10060(cs2method_10051(cs2method_10805(cs2method_10236(91357204), 17813, cs2method_10427(v5, cs2method_10427(v0, v2))), 13), 2);
			cs2method_10283(cs2method_10236(91357198), cs2method_11048(cs2method_10060(v4, 44), 130), 0, 0, 91357198);
			script_7538(v5, v1, v0, a2, v2);
			cs2method_20024(new function<script_7537>(object a0,int a1,object a2,int a3,object a4) {
				script_7538(a2, a1, a0, a3, a4);
				return;
			}, (string)v5, (string)v0, (string)v2, v1, a2, 18, 1, "sssiiY", new WidgetPointer(1394,14));
			cs2method_10467(0, 91357196);
			return;
		}, new WidgetPointer(-32768,3), -2147483643, a5, a3, "IigJ");
	}
	return;
}
