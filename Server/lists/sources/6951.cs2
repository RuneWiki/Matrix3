/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


script_6951_struct(6,0,0) script_6951(int a0) {
	switch (a0) {
		case 23674:
			return new script_6951_struct(75, 0, 0, 0, 0, 0);
		case 24850:
			return new script_6951_struct(35, 0, 0, 0, 0, 0);
		case 24851:
			return new script_6951_struct(45, 0, 0, 0, 0, 0);
		case 24852:
			return new script_6951_struct(55, 0, 0, 0, 0, 0);
		case 23679:
			return new script_6951_struct(75, 0, 0, 0, 0, 0);
		case 23680:
			return new script_6951_struct(75, 0, 0, 0, 0, 0);
		case 23681:
			return new script_6951_struct(75, 0, 0, 0, 0, 0);
		case 23682:
			return new script_6951_struct(75, 0, 0, 0, 0, 0);
		case 23683:
			return new script_6951_struct(70, 0, 0, 0, 0, 0);
		case 23684:
			return new script_6951_struct(0, 0, 70, 70, 0, 0);
		case 23685:
			return new script_6951_struct(0, 0, 70, 70, 0, 0);
		case 23686:
			return new script_6951_struct(0, 0, 70, 70, 0, 0);
		case 23687:
			return new script_6951_struct(0, 0, 65, 0, 0, 0);
		case 23688:
			return new script_6951_struct(0, 0, 65, 0, 0, 0);
		case 23689:
			return new script_6951_struct(0, 0, 65, 0, 0, 0);
		case 23690:
			return new script_6951_struct(70, 0, 0, 0, 0, 0);
		case 23691:
			return new script_6951_struct(70, 0, 0, 0, 0, 0);
		case 23692:
			return new script_6951_struct(0, 0, 60, 0, 0, 0);
		case 23693:
			return new script_6951_struct(0, 0, 60, 0, 0, 0);
		case 23694:
			return new script_6951_struct(0, 0, 60, 0, 0, 0);
		case 23695:
			return new script_6951_struct(60, 0, 0, 0, 0, 0);
		case 23696:
			return new script_6951_struct(60, 0, 0, 0, 0, 0);
		case 23697:
			return new script_6951_struct(0, 0, 75, 0, 65, 70);
		case 23698:
			return new script_6951_struct(0, 0, 75, 0, 0, 75);
		case 23699:
			return new script_6951_struct(0, 0, 75, 0, 0, 75);
		case 23700:
			return new script_6951_struct(0, 0, 75, 0, 65, 70);
	}
	return new script_6951_struct(-1, -1, -1, -1, -1, -1);
}
