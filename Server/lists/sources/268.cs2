/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_268(int a0) {
	int v0 = script_284(cs2method_10472());
	switch (cs2_configs['cfg1007']) {
		case 0:
			script_2766(0, 50, a0);
			break;
		case 1:
			script_2768(50, a0);
			cs2method_11031(0, 5);
			cs2method_11031(1, 5);
			cs2method_10971(0, 0, cs2method_10327(v0, 25, 0, 17), 586, cs2method_10327(v0, 27, 0, 14), 586, 0);
			cs2method_10971(1, 0, cs2method_10327(v0, 26, 0, 24), 284, cs2method_10327(v0, 29, 0, 24), 284, 0);
			cs2method_10971(0, 1, cs2method_10327(v0, 25, 0, 17), 586, cs2method_10327(v0, 27, 0, 14), 586, 0);
			cs2method_10971(1, 1, cs2method_10327(v0, 26, 0, 24), 284, cs2method_10327(v0, 29, 0, 24), 284, 0);
			cs2method_10971(0, 2, cs2method_10327(v0, 35, 0, 16), 618, cs2method_10327(v0, 40, 0, 21), 618, 0);
			cs2method_10971(1, 2, cs2method_10327(v0, 28, 0, 20), 372, cs2method_10327(v0, 28, 0, 18), 372, 0);
			cs2method_10971(0, 3, cs2method_10327(v0, 27, 0, 24), 1500, cs2method_10327(v0, 24, 0, 23), 1025, 0);
			cs2method_10971(1, 3, cs2method_10327(v0, 32, 0, 13), 308, cs2method_10327(v0, 36, 0, 13), 308, 0);
			cs2method_10971(0, 4, cs2method_10327(v0, 25, 0, 22), 450, cs2method_10327(v0, 25, 0, 22), 450, 0);
			cs2method_10971(1, 4, cs2method_10327(v0, 32, 0, 13), 600, cs2method_10327(v0, 32, 0, 13), 600, 0);
			cs2method_10382(0, 0, 0, 0, 1, 0);
			break;
		case 2:
			script_2768(50, a0);
			cs2method_11031(0, 5);
			cs2method_11031(1, 5);
			cs2method_10971(0, 0, cs2method_10327(v0, 36, 0, 17), 626, cs2method_10327(v0, 33, 0, 14), 626, 0);
			cs2method_10971(1, 0, cs2method_10327(v0, 37, 0, 25), 308, cs2method_10327(v0, 35, 0, 22), 308, 0);
			cs2method_10971(0, 1, cs2method_10327(v0, 36, 0, 17), 626, cs2method_10327(v0, 33, 0, 14), 626, 0);
			cs2method_10971(1, 1, cs2method_10327(v0, 37, 0, 25), 308, cs2method_10327(v0, 35, 0, 22), 308, 0);
			cs2method_10971(0, 2, cs2method_10327(v0, 30, 0, 17), 840, cs2method_10327(v0, 31, 0, 19), 1395, 0);
			cs2method_10971(1, 2, cs2method_10327(v0, 36, 0, 21), 388, cs2method_10327(v0, 37, 0, 20), 388, 0);
			cs2method_10971(0, 3, cs2method_10327(v0, 38, 0, 22), 1500, cs2method_10327(v0, 41, 0, 22), 1670, 0);
			cs2method_10971(1, 3, cs2method_10327(v0, 33, 0, 14), 300, cs2method_10327(v0, 26, 0, 11), 300, 0);
			cs2method_10971(0, 4, cs2method_10327(v0, 38, 0, 22), 450, cs2method_10327(v0, 38, 0, 22), 450, 0);
			cs2method_10971(1, 4, cs2method_10327(v0, 33, 0, 14), 600, cs2method_10327(v0, 33, 0, 14), 600, 0);
			cs2method_10382(0, 0, 0, 0, 1, 0);
			break;
		case 3:
			cs2method_10382(0, 1, 50, 1000, 1, 1);
			cs2method_20196(new function<script_270>(int a0,int a1) {
				if (a1 <= cs2method_10461(cs2method_10723(0), 2)) {
					if (a1 != cs2method_10461(cs2method_10723(0), 2)) {
						cs2method_10382(0, a1, 1000, 1000, 1, a1);
					} else {
						cs2method_10382(0, a1, 250, 50, 1, a1);
					}
				} else {
					cs2method_20196(new function<none>() {
					}, "", new WidgetPointer(a0));
					return;
				}
				cs2method_20196(load function<270>, cs2method_10872(cs2method_10461(cs2method_10723(0), 1), cs2method_10060(1, a1)), new WidgetPointer(a0), "iI", new WidgetPointer(a0));
				return;
			}, 2, new WidgetPointer(a0), "iI", new WidgetPointer(a0));
	}
	return;
}
