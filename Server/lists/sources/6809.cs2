/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_6809(int a0) {
	switch (cs2_configs['cfg1007']) {
		case 201:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(2, 45), 400, script_6810(2, 45), 400, 0);
			cs2method_10971(1, 0, script_6810(-6, 45), 400, script_6810(-6, 45), 400, 0);
			cs2method_10971(0, 1, script_6810(0, 46), 400, script_6810(0, 46), 400, 0);
			cs2method_10971(1, 1, script_6810(-6, 44), 400, script_6810(-6, 44), 400, 0);
			cs2method_10382(0, 0, 400, 400, 1, 0);
			break;
		case 202:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(63, 46), 400, script_6810(63, 46), 400, 0);
			cs2method_10971(1, 0, script_6810(58, 44), 400, script_6810(58, 44), 400, 0);
			cs2method_10971(0, 1, script_6810(59, 44), 400, script_6810(59, 44), 400, 0);
			cs2method_10971(1, 1, script_6810(64, 45), 400, script_6810(64, 45), 400, 0);
			cs2method_10382(0, 0, 750, 750, 1, 0);
			break;
		case 203:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(59, 44), 400, script_6810(59, 44), 400, 0);
			cs2method_10971(1, 0, script_6810(64, 45), 400, script_6810(64, 45), 400, 0);
			cs2method_10971(0, 1, script_6810(60, 45), 400, script_6810(60, 45), 400, 0);
			cs2method_10971(1, 1, script_6810(64, 45), 400, script_6810(64, 45), 400, 0);
			cs2method_10382(0, 0, 500, 1500, 1, 0);
			break;
		case 204:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(5, 31), 2200, script_6810(5, 31), 2200, 0);
			cs2method_10971(1, 0, script_6810(10, 28), 1400, script_6810(10, 28), 1400, 0);
			cs2method_10971(0, 1, script_6810(8, 27), 1500, script_6810(8, 27), 1500, 0);
			cs2method_10971(1, 1, script_6810(10, 27), 1475, script_6810(10, 27), 1475, 0);
			cs2method_10382(0, 0, 500, 1500, 1, 0);
			break;
		case 205:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(8, 27), 1500, script_6810(8, 27), 1500, 0);
			cs2method_10971(1, 0, script_6810(10, 27), 1475, script_6810(10, 27), 1475, 0);
			cs2method_10971(0, 1, script_6810(13, 26), 1500, script_6810(13, 26), 1500, 0);
			cs2method_10971(1, 1, script_6810(16, 25), 1400, script_6810(16, 25), 1400, 0);
			cs2method_10382(0, 0, 200, 200, 1, 0);
			break;
		case 206:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(13, 26), 1500, script_6810(13, 26), 1500, 0);
			cs2method_10971(1, 0, script_6810(16, 25), 1400, script_6810(16, 25), 1400, 0);
			cs2method_10971(0, 1, script_6810(17, 26), 1500, script_6810(17, 26), 1500, 0);
			cs2method_10971(1, 1, script_6810(21, 24), 1400, script_6810(21, 24), 1400, 0);
			cs2method_10382(0, 0, 200, 200, 1, 0);
			break;
		case 207:
			cs2method_11031(0, 3);
			cs2method_11031(1, 3);
			cs2method_10971(0, 0, script_6810(17, 26), 1500, script_6810(17, 26), 1500, 0);
			cs2method_10971(1, 0, script_6810(21, 24), 1400, script_6810(21, 24), 1400, 0);
			cs2method_10971(0, 1, script_6810(8, 27), 1500, script_6810(8, 27), 1500, 0);
			cs2method_10971(1, 1, script_6810(10, 27), 1475, script_6810(10, 27), 1475, 0);
			cs2method_10971(0, 2, script_6810(5, 31), 2200, script_6810(5, 31), 2200, 0);
			cs2method_10971(1, 2, script_6810(10, 28), 1400, script_6810(10, 28), 1400, 0);
			cs2method_20196(new function<script_6811>(int a0,int a1,int a2,int a3,int a4) {
				if (script_8076(1352) == 0) {
					return;
				}
				cs2method_20196(new function<none>() {
				}, "", new WidgetPointer(a0));
				cs2method_10382(0, a4, a1, a2, 1, 0);
				return;
			}, 1, 50, 50, new WidgetPointer(a0), cs2method_10723(0), "iiiIi", new WidgetPointer(a0));
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 208:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(21, 24), 1500, script_6810(21, 24), 1500, 0);
			cs2method_10971(1, 0, script_6810(23, 24), 400, script_6810(23, 24), 400, 0);
			cs2method_10971(0, 1, script_6810(20, 24), 2000, script_6810(20, 24), 2100, 0);
			cs2method_10971(1, 1, script_6810(23, 24), 400, script_6810(23, 24), 400, 0);
			cs2method_10382(0, 0, 200, 200, 1, 0);
			break;
		case 209:
			cs2method_11031(0, 3);
			cs2method_11031(1, 3);
			cs2method_10971(0, 0, script_6810(20, 27), 1450, script_6810(20, 27), 1450, 0);
			cs2method_10971(1, 0, script_6810(20, 13), 1400, script_6810(20, 13), 1400, 0);
			cs2method_10971(0, 1, script_6810(21, 22), 1450, script_6810(21, 22), 1450, 0);
			cs2method_10971(1, 1, script_6810(20, 13), 1400, script_6810(20, 13), 1400, 0);
			cs2method_10971(0, 2, script_6810(24, 18), 1450, script_6810(24, 18), 1450, 0);
			cs2method_10971(1, 2, script_6810(20, 13), 1400, script_6810(20, 13), 1400, 0);
			cs2method_20196(new function<script_6811>(int a0,int a1,int a2,int a3,int a4) {
				if (script_8076(1352) == 0) {
					return;
				}
				cs2method_20196(new function<none>() {
				}, "", new WidgetPointer(a1));
				cs2method_10382(0, a2, a3, a4, 1, 0);
				return;
			}, 1, 100, 100, new WidgetPointer(a0), cs2method_10723(0), "iiiIi", new WidgetPointer(a0));
			cs2method_10382(0, 0, 300, 300, 1, 0);
			break;
		case 210:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(41, 63), 450, script_6810(41, 63), 450, 0);
			cs2method_10971(1, 0, script_6810(40, 43), 400, script_6810(40, 43), 400, 0);
			cs2method_10971(0, 1, script_6810(41, 49), 450, script_6810(41, 49), 450, 0);
			cs2method_10971(1, 1, script_6810(41, 43), 400, script_6810(41, 43), 400, 0);
			cs2method_10382(0, 0, 100, 100, 1, 0);
			break;
		case 211:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(41, 49), 450, script_6810(41, 49), 450, 0);
			cs2method_10971(1, 0, script_6810(41, 43), 400, script_6810(41, 43), 400, 0);
			cs2method_10971(0, 1, script_6810(41, 25), 650, script_6810(41, 25), 650, 0);
			cs2method_10971(1, 1, script_6810(41, 20), 600, script_6810(41, 20), 600, 0);
			cs2method_10382(0, 0, 300, 500, 1, 0);
			break;
		case 212:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 1000, script_6810(29, 26), 1000, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 900, script_6810(29, 26), 900, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 213:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 900, script_6810(29, 26), 900, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 800, script_6810(29, 26), 800, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 214:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 800, script_6810(29, 26), 800, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 700, script_6810(29, 26), 700, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 215:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 700, script_6810(29, 26), 700, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 600, script_6810(29, 26), 600, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 216:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 600, script_6810(29, 26), 600, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 500, script_6810(29, 26), 500, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
			break;
		case 217:
			cs2method_11031(0, 2);
			cs2method_11031(1, 2);
			cs2method_10971(0, 0, script_6810(29, 26), 500, script_6810(29, 26), 500, 0);
			cs2method_10971(1, 0, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10971(0, 1, script_6810(29, 26), 400, script_6810(29, 26), 400, 0);
			cs2method_10971(1, 1, script_6810(31, 28), 100, script_6810(31, 28), 100, 0);
			cs2method_10382(0, 0, 500, 500, 1, 0);
	}
	return;
}
