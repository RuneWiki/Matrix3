/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_3849(int a0) {
	if (cs2method_10236(a0) < 147) {
		if (cs2method_11038(a0, 2) == 1) {
			cs2method_10063(63, 0, 0, 1);
		}
		if (cs2method_11038(a0, 3) == 1) {
			cs2method_10063(63, 0, 0, 1);
		}
		if (cs2method_11038(a0, 4) == 1) {
			cs2method_10063(63, 0, 0, 1);
		}
		if (cs2method_11038(a0, 5) == 1) {
			cs2method_10063(63, 0, 0, 1);
		}
		if (cs2method_11038(a0, 6) == 1) {
			cs2method_10063(66, 0, 0, 1);
		}
		if (cs2method_11038(a0, 7) == 1) {
			cs2method_10063(34, 0, 0, 1);
		}
		if (cs2method_11038(a0, 8) == 1) {
			cs2method_10063(34, 0, 0, 1);
		}
		if (cs2method_11038(a0, 9) == 1) {
			cs2method_10063(34, 0, 0, 1);
		}
		if (cs2method_11038(a0, 10) == 1) {
			cs2method_10063(34, 0, 0, 1);
		}
		if (cs2method_11038(a0, 11) == 1) {
			cs2method_10063(37, 0, 0, 1);
		}
		if (cs2method_11038(a0, 12) == 1) {
			cs2method_10063(5, 0, 0, 1);
		}
		if (cs2method_11038(a0, 13) == 1) {
			cs2method_10063(5, 0, 0, 1);
		}
		if (cs2method_11038(a0, 14) == 1) {
			cs2method_10063(5, 0, 0, 1);
		}
		if (cs2method_11038(a0, 15) == 1) {
			cs2method_10063(5, 0, 0, 1);
		}
		if (cs2method_11038(a0, 16) == 1) {
			cs2method_10063(8, 0, 0, 1);
		}
		if (cs2method_11038(a0, 0) == 1) {
			cs2method_10269(1);
		}
		if (cs2method_11038(a0, 1) == 1) {
			cs2method_10002(255);
		}
	} else {
		if (cs2method_11038(a0, 2) == 1) {
			cs2method_10063(-3, 0, 1, 1);
		}
		if (cs2method_11038(a0, 3) == 1) {
			cs2method_10063(-3, 0, 1, 1);
		}
		if (cs2method_11038(a0, 4) == 1) {
			cs2method_10063(-3, 0, 1, 1);
		}
		if (cs2method_11038(a0, 5) == 1) {
			cs2method_10063(-3, 0, 1, 1);
		}
		if (cs2method_11038(a0, 6) == 1) {
			cs2method_10063(-3, 0, 1, 1);
		}
		if (cs2method_11038(a0, 7) == 1) {
			cs2method_10063(-32, 0, 1, 1);
		}
		if (cs2method_11038(a0, 8) == 1) {
			cs2method_10063(-32, 0, 1, 1);
		}
		if (cs2method_11038(a0, 9) == 1) {
			cs2method_10063(-32, 0, 1, 1);
		}
		if (cs2method_11038(a0, 10) == 1) {
			cs2method_10063(-32, 0, 1, 1);
		}
		if (cs2method_11038(a0, 11) == 1) {
			cs2method_10063(-32, 0, 1, 1);
		}
		if (cs2method_11038(a0, 12) == 1) {
			cs2method_10063(-61, 0, 1, 1);
		}
		if (cs2method_11038(a0, 13) == 1) {
			cs2method_10063(-61, 0, 1, 1);
		}
		if (cs2method_11038(a0, 14) == 1) {
			cs2method_10063(-61, 0, 1, 1);
		}
		if (cs2method_11038(a0, 15) == 1) {
			cs2method_10063(-61, 0, 1, 1);
		}
		if (cs2method_11038(a0, 16) == 1) {
			cs2method_10063(-61, 0, 1, 1);
		}
		if (cs2method_11038(a0, 0) == 1) {
			cs2method_10269(0);
		}
		if (cs2method_11038(a0, 1) == 1) {
			cs2method_10002(0);
		}
	}
	return;
}
