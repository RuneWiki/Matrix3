/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */
// Beautifier was aborted, because this function contains unsolved flow blocks.


void script_9237(int a0,int a1,int a2,int a3,int a4,int a5,int a6,int a7,int a8) {
	int v14;
	int v22;
	flow_0:
		if (a1 == -1 || a3 == -1) {
			return;
		}
		int v5 = cs2method_11048(a0, cs2method_10872(a7, cs2method_10461(cs2method_10894(a3), 1)));
		if (a5 != -1) {
			cs2method_10467(1, a5);
		}
		int v6 = cs2method_10982(a1);
		int v4 = 36;
		int v36 = 32;
		int v1 = v4;
		int v17 = v36;
		if (a2 != -1) {
			if (client_configs['cfg3680'].bitcfg22315 == 0) {
				cs2method_10467(0, a2);
			} else {
				cs2method_10467(1, a2);
			}
			cs2method_10273(a2);
			v1 = 40;
			v17 = 36;
		}
		cs2method_10273(a1);
		if (cs2method_10324(a1) == 1) {
			cs2method_10995(3818, a3);
			cs2method_10995(3819, a6);
			cs2method_10995(3820, a4);
		}
		int v33 = cs2method_10872(cs2method_10060(cs2method_10461(v5, a0), 1), cs2method_10894(a3));
		int v30 = 0;
		int v35 = 0;
		if (v6 != -1) {
			v22 = cs2method_10236(v6);
			v14 = cs2method_10823(v6);
		} else {
			v22 = cs2method_10236(a1);
			v14 = cs2method_10823(a1);
		}
		int v2 = 2;
		int v46 = 2;
		int v7 = 2;
		int v23 = 2;
		int v18 = 2;
		int v19 = 2;
		int v9 = cs2method_10060(36, v7);
		int v0 = cs2method_10060(cs2method_10060(32, 2), v23);
		if (client_configs['cfg3680'].bitcfg22315 == 1 && (script_189(a1, script_8073()) == 1 || script_189(a1, 49938432) == 1)) {
			v2 = cs2method_10872(15, cs2method_10968(cs2method_10461(v14, cs2method_10051(cs2method_10968(v33, 4), v0)), 2));
			v18 = cs2method_11048(v18, cs2method_10968(cs2method_10461(v22, cs2method_10051(5, cs2method_10060(v9, v7))), 2));
			v19 = v18;
		}
		int v45 = 0;
		int v44 = 0;
		int v40 = 0;
		int v15 = cs2method_10461(v22, v19);
		int v29 = v9;
		int v48 = cs2method_10060(v18, v19);
		int v47 = v7;
		script_376_struct(3,0,0) v25 = script_376(v15, v29, v48, v47);
		int v11 = v25.intpart_2;
		int v24 = v25.intpart_1;
		int v27 = v25.intpart_0;
		int v8 = cs2method_10872(v27, v33);
		int v12 = 0;
		int v26 = cs2method_11048(1, cs2method_10968(v33, v8));
		if (cs2method_10038(v33, v8) > 0) {
			v26 = cs2method_10060(v26, 1);
		}
		int v38 = 0;
		int v41 = 0;
		if (v6 != -1 && a6 != -1) {
			cs2method_10112(0, 0, 0, 0, v6);
			if (cs2method_10051(v26, v0) > cs2method_10060(v14, 5)) {
				int v31 = 1;
				cs2method_10283(16, 0, 1, 1, v6);
				cs2method_10112(0, 0, 2, 0, a6);
				cs2method_10283(16, cs2method_10823(v6), 0, 0, a6);
				cs2method_10467(0, a6);
				int v13 = cs2method_10236(v6);
				int v42 = cs2method_10461(v13, v19);
				int v3 = v9;
				int v34 = cs2method_10060(v18, v19);
				int v49 = v7;
				script_376_struct(3,0,0) v32 = script_376(v42, v3, v34, v49);
				v11 = v32.intpart_2;
				v24 = v32.intpart_1;
				int v39 = v32.intpart_0;
				v8 = cs2method_10872(v39, v33);
				int v28 = cs2method_11048(1, cs2method_10968(v33, v8));
				if (cs2method_10038(v33, v8) > 0) {
					v28 = cs2method_10060(v28, 1);
				}
				int v20 = cs2method_10051(v28, v0);
				cs2method_11130(0, v20, v6);
				script_7791(a6, v6);
			} else {
				cs2method_10283(0, 0, 1, 1, v6);
				cs2method_10467(1, a6);
			}
		}
		int v21 = 0;
		int v10 = 0;
		int v37 = -1;
		int v43 = 0;
		globalarray_0 = new int[v8];
		while (v21 < v8) {
			globalarray_0[v21] = script_433(v24, v18, v11, v21);
			v21 = cs2method_10060(v21, 1);
		}
		int v16 = 0;
		IF (a2 != -1) 
			GOTO	flow_30
		GOTO	flow_36
	flow_30:
		IF (v16 <= v5) 
			GOTO	flow_31
		GOTO	flow_35
	flow_31:
		cs2method_10606(a2, 5, v16);
		cs2method_10606(a1, 5, v16);
		if (v16 >= a0) {
			cs2method_10013(v1, v17, 0, 0);
			cs2method_10310(18266);
			cs2method_10063(cs2method_10461(globalarray_0[cs2method_10038(v16, v8)], 1), cs2method_10461(cs2method_10060(cs2method_10051(cs2method_10968(v16, v8), v0), v2), 1), 0, 0);
			cs2method_10013(v4, v36, 0, 0);
			cs2method_10063(cs2method_10060(globalarray_0[cs2method_10038(v16, v8)], 3), cs2method_10060(cs2method_10060(cs2method_10051(cs2method_10968(v16, v8), v0), 1), v2), 0, 0);
		} else {
			cs2method_10013(0, 0, 0, 0);
			cs2method_10269(1);
			cs2method_10013(0, 0, 0, 0);
			cs2method_10269(1);
		}
		v16 = cs2method_10060(v16, 1);
		GOTO	flow_30
	flow_35:
		GOTO	flow_41
	flow_36:
		IF (v16 <= v5) 
			GOTO	flow_37
		GOTO	flow_41
	flow_37:
		cs2method_10606(a1, 5, v16);
		if (v16 >= a0) {
			cs2method_10013(v1, v17, 0, 0);
			cs2method_10337(1);
			cs2method_10063(cs2method_10060(globalarray_0[cs2method_10038(v16, v8)], 3), cs2method_10060(cs2method_10060(cs2method_10051(cs2method_10968(v16, v8), v0), 1), v2), 0, 0);
		} else {
			cs2method_10013(0, 0, 0, 0);
			cs2method_10269(1);
		}
		v16 = cs2method_10060(v16, 1);
		GOTO	flow_36
	flow_41:
		return;
}
