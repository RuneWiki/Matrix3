/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */
// Beautifier was aborted, because this function contains unsolved flow blocks.


void script_7272(int a0,int a1,int a2,int a3,object a4,int a5,int a6,int a7,int a8) {
	int v3;
	int v6;
	flow_0:
		int v1 = 0;
		int v4 = 0;
		int v8 = 0;
		int v7 = 0;
		int v15 = 0;
		int v5 = 0;
		int v13 = 0;
		int v14 = 0;
		int v12 = -1;
		if (a6 == -1 && cs2method_10324(a2) == 1) {
			v1 = cs2method_10060(cs2method_10060(cs2method_10191(a2), 5), a7);
			v4 = cs2method_10060(cs2method_10060(cs2method_10060(cs2method_10152(a2), cs2method_10823(a2)), 5), a3);
		} else {
			if (cs2method_11038(a2, a6) == 1) {
				v1 = cs2method_10060(cs2method_10060(cs2method_10878(), 5), a7);
				v4 = cs2method_10060(cs2method_10060(cs2method_10060(cs2method_10406(), cs2method_10664()), 5), a3);
			}
		}
		IF (a6 == -1) 
			GOTO	flow_6
		GOTO	flow_7
	flow_6:
		IF (cs2method_10324(a2) == 1) 
			GOTO	flow_8
	flow_7:
		IF (cs2method_11038(a2, a6) == 1) 
			GOTO	flow_8
		GOTO	flow_42
	flow_8:
		if (script_4761(a8) == 0) {
			return;
		}
		if (cs2_configs['cfg2'] != 1) {
			int v2 = cs2method_10982(a0);
			if (v2 != -1 && a5 >= cs2method_10236(v2)) {
				a5 = cs2method_10236(v2);
			}
			if (a1 == 0) {
				v3 = cs2method_10060(4, cs2method_10509(cs2method_10461(a5, 4), 495, a4));
				v6 = cs2method_10060(4, cs2method_10051(16, cs2method_10805(cs2method_10461(a5, 4), 495, a4)));
			} else {
				v3 = cs2method_10060(12, cs2method_10509(cs2method_10461(a5, 12), 17813, a4));
				v6 = cs2method_10060(12, cs2method_10051(16, cs2method_10805(cs2method_10461(a5, 12), 17813, a4)));
			}
			if (v2 != -1) {
				int v10 = cs2method_10461(v1, cs2method_10134(v2));
				int v0 = cs2method_10461(v4, cs2method_10718(v2));
				if (v10 < 0) {
					v1 = cs2method_10134(v2);
					v10 = 0;
				}
				if (v0 < 0) {
					v4 = cs2method_10718(v2);
					v0 = 0;
				}
				if (v10 > 0) {
					int v11 = cs2method_10060(cs2method_10461(v10, cs2method_10236(v2)), v3);
					if (v11 > 0) {
						v1 = cs2method_10461(v1, v11);
					}
				}
				if (v0 > 0) {
					int v9 = cs2method_10060(cs2method_10461(v0, cs2method_10823(v2)), v6);
					if (v9 > 0) {
						v4 = cs2method_10461(cs2method_10461(cs2method_10461(v4, v9), cs2method_10664()), 10);
					}
				}
			}
			if (v1 < 0) {
				v1 = 0;
			}
			if (v4 < 0) {
				v4 = 0;
			}
			cs2method_10283(v3, v6, 0, 0, a0);
			cs2method_10112(v1, v4, 0, 0, a0);
			cs2method_10273(a0);
			cs2method_10606(a0, 3, 0);
			cs2method_10013(cs2method_10236(a0), cs2method_10823(a0), 0, 0);
			cs2method_10238(1);
			if (a1 == 0) {
				cs2method_10811(921102);
			} else {
				cs2method_10811(0);
			}
			if (a1 == 0) {
				cs2method_10606(a0, 3, 1);
				cs2method_10013(cs2method_10236(a0), cs2method_10823(a0), 0, 0);
				cs2method_10238(0);
				cs2method_10811(15461606);
			} else {
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(4, 10, 1, 0);
				cs2method_10063(0, 0, 1, 0);
				cs2method_10310(4649);
				cs2method_10577(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(4, 10, 1, 0);
				cs2method_10063(0, 0, 1, 2);
				cs2method_10310(4649);
				cs2method_10577(1);
				cs2method_10230(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 4, 0, 1);
				cs2method_10063(0, 0, 0, 1);
				cs2method_10310(4651);
				cs2method_10577(1);
				cs2method_10434(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 4, 0, 1);
				cs2method_10063(0, 0, 2, 1);
				cs2method_10310(4651);
				cs2method_10577(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 10, 0, 0);
				cs2method_10063(0, 0, 0, 0);
				cs2method_10310(4650);
				cs2method_10434(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 10, 0, 0);
				cs2method_10063(0, 0, 2, 0);
				cs2method_10310(4650);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 10, 0, 0);
				cs2method_10063(0, 0, 0, 2);
				cs2method_10310(4650);
				cs2method_10434(1);
				cs2method_10230(1);
				cs2method_10606(a0, 5, cs2method_10163(a0));
				cs2method_10013(10, 10, 0, 0);
				cs2method_10063(0, 0, 2, 2);
				cs2method_10310(4650);
				cs2method_10230(1);
			}
			cs2method_10606(a0, 4, cs2method_10163(a0));
			cs2method_10797(a4);
			if (a1 == 0) {
				cs2method_10013(cs2method_10461(a5, 4), cs2method_10823(a0), 0, 0);
				cs2method_10063(2, 0, 0, 0);
				cs2method_11105(0, 1, 16);
				cs2method_10692(495);
				cs2method_10811(16101953);
			} else {
				cs2method_10013(cs2method_10461(cs2method_10236(a0), 12), cs2method_10461(cs2method_10823(a0), 12), 0, 0);
				cs2method_10063(6, 6, 0, 0);
				cs2method_11105(1, 1, 13);
				cs2method_10811(16777215);
				cs2method_10692(17813);
			}
			cs2_configs['cfg2'] = 1;
		}
	flow_42:
		return;
}
