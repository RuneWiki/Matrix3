/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


int script_7000(int a0) {
	int v3 = -1;
	int v0 = 0;
	int v4 = 0;
	int v2 = -1;
	int v6 = -1;
	if (a0 != -1) {
		if (cs2method_10936(93, a0) < 1 && cs2method_10936(94, a0) < 1) {
			int v5 = itemDefsAttribute(a0, 2281);
			if (v5 != -1) {
				int v1 = 0;
				while (v1 < 36 && v4 == 0) {
					switch (v1) {
						case 0:
							v2 = idx22mapAttribute(v5, 591);
							v6 = 93;
							break;
						case 1:
							v2 = idx22mapAttribute(v5, 590);
							v6 = 93;
							break;
						case 2:
							v2 = idx22mapAttribute(v5, 589);
							v6 = 93;
							break;
						case 3:
							v2 = idx22mapAttribute(v5, 588);
							v6 = 93;
							break;
						case 4:
							v2 = idx22mapAttribute(v5, 535);
							v6 = 93;
							break;
						case 5:
							v2 = idx22mapAttribute(v5, 534);
							v6 = 93;
							break;
						case 6:
							v2 = idx22mapAttribute(v5, 533);
							v6 = 93;
							break;
						case 7:
							v2 = idx22mapAttribute(v5, 532);
							v6 = 93;
							break;
						case 8:
							v2 = idx22mapAttribute(v5, 2984);
							v6 = 93;
							break;
						case 9:
							v2 = idx22mapAttribute(v5, 2983);
							v6 = 93;
							break;
						case 10:
							v2 = idx22mapAttribute(v5, 2982);
							v6 = 93;
							break;
						case 11:
							v2 = idx22mapAttribute(v5, 2981);
							v6 = 93;
							break;
						case 12:
							v2 = idx22mapAttribute(v5, 2246);
							v6 = 93;
							break;
						case 13:
							v2 = idx22mapAttribute(v5, 2245);
							v6 = 93;
							break;
						case 14:
							v2 = idx22mapAttribute(v5, 2244);
							v6 = 93;
							break;
						case 15:
							v2 = idx22mapAttribute(v5, 2243);
							v6 = 93;
							break;
						case 16:
							v2 = idx22mapAttribute(v5, 2242);
							v6 = 93;
							break;
						case 17:
							v2 = idx22mapAttribute(v5, 2241);
							v6 = 93;
							break;
						case 18:
							v2 = idx22mapAttribute(v5, 591);
							v6 = 94;
							break;
						case 19:
							v2 = idx22mapAttribute(v5, 590);
							v6 = 94;
							break;
						case 20:
							v2 = idx22mapAttribute(v5, 589);
							v6 = 94;
							break;
						case 21:
							v2 = idx22mapAttribute(v5, 588);
							v6 = 94;
							break;
						case 22:
							v2 = idx22mapAttribute(v5, 535);
							v6 = 94;
							break;
						case 23:
							v2 = idx22mapAttribute(v5, 534);
							v6 = 94;
							break;
						case 24:
							v2 = idx22mapAttribute(v5, 533);
							v6 = 94;
							break;
						case 25:
							v2 = idx22mapAttribute(v5, 532);
							v6 = 94;
							break;
						case 26:
							v2 = idx22mapAttribute(v5, 2984);
							v6 = 94;
							break;
						case 27:
							v2 = idx22mapAttribute(v5, 2983);
							v6 = 94;
							break;
						case 28:
							v2 = idx22mapAttribute(v5, 2982);
							v6 = 94;
							break;
						case 29:
							v2 = idx22mapAttribute(v5, 2981);
							v6 = 94;
							break;
						case 30:
							v2 = idx22mapAttribute(v5, 2246);
							v6 = 94;
							break;
						case 31:
							v2 = idx22mapAttribute(v5, 2245);
							v6 = 94;
							break;
						case 32:
							v2 = idx22mapAttribute(v5, 2244);
							v6 = 94;
							break;
						case 33:
							v2 = idx22mapAttribute(v5, 2243);
							v6 = 94;
							break;
						case 34:
							v2 = idx22mapAttribute(v5, 2242);
							v6 = 94;
							break;
						case 35:
							v2 = idx22mapAttribute(v5, 2241);
							v6 = 94;
					}
					if (v2 != -1 && cs2method_10936(v6, v2) > 0) {
						a0 = v2;
						v4 = 1;
					}
					v1 = cs2method_10060(v1, 1);
				}
			}
		}
		if (cs2method_10936(93, a0) > 0 || cs2method_10936(94, a0) == 0) {
			if (cs2method_10265(cs2method_10940(a0, 1)) > 0) {
				return 1;
			}
			if (cs2method_10265(cs2method_10940(a0, 2)) > 0) {
				return 2;
			}
			if (cs2method_10265(cs2method_10940(a0, 3)) > 0) {
				return 3;
			}
			if (cs2method_10265(cs2method_10940(a0, 4)) > 0) {
				return 4;
			}
			if (cs2method_10265(cs2method_10940(a0, 5)) > 0) {
				return 5;
			}
			if (cs2method_10265(cs2method_10940(a0, 6)) > 0) {
				return 6;
			}
			if (cs2method_10265(cs2method_10940(a0, 7)) > 0) {
				return 7;
			}
			if (cs2method_10265(cs2method_10940(a0, 8)) > 0) {
				return 8;
			}
			if (cs2method_10265(cs2method_10940(a0, 9)) > 0) {
				return 9;
			}
		} else {
			if (cs2method_10936(94, a0) > 0) {
				if (cs2method_10265(itemDefsAttribute(a0, 528)) > 0) {
					return 1;
				}
				if (cs2method_10265(itemDefsAttribute(a0, 529)) > 0) {
					return 2;
				}
				if (cs2method_10265(itemDefsAttribute(a0, 530)) > 0) {
					return 3;
				}
				if (cs2method_10265(itemDefsAttribute(a0, 531)) > 0) {
					return 4;
				}
				if (cs2method_10265(itemDefsAttribute(a0, 1211)) > 0) {
					return 5;
				}
			}
		}
	}
	return 1;
}
