/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_10017() {
	int v9;
	int v2;
	int v7 = 97386521;
	int v0 = interfaceDefsAttribute(4206);
	int v11 = idx22mapAttribute(v0, 847);
	object v30 = idx22mapAttribute(v0, 845);
	int v23 = idx22mapAttribute(v0, 952);
	if (v23 == 2270) {
		v23 = -1;
	}
	object v5 = idx22mapAttribute(v0, 849);
	int v22 = script_2193(v11);
	int v27 = idx22mapAttribute(v0, 848);
	globalarray_0 = new int[4];
	globalarray_1 = new int[4];
	for (int v34 = 0, int v35 = 0, int v20 = -1, int v31 = -1, object v26 = "null"; v35 < 12; v35 = cs2method_10060(v35, 1)) {
		switch (v35) {
			case 0:
				v2 = idx22mapAttribute(v0, 871);
				v9 = idx22mapAttribute(v0, 872);
				break;
			case 1:
				v2 = idx22mapAttribute(v0, 873);
				v9 = idx22mapAttribute(v0, 874);
				break;
			case 2:
				v2 = idx22mapAttribute(v0, 875);
				v9 = idx22mapAttribute(v0, 876);
				break;
			case 3:
				v2 = idx22mapAttribute(v0, 877);
				v9 = idx22mapAttribute(v0, 878);
				break;
			case 4:
				v2 = idx22mapAttribute(v0, 879);
				v9 = idx22mapAttribute(v0, 880);
				break;
			case 5:
				v2 = idx22mapAttribute(v0, 881);
				v9 = idx22mapAttribute(v0, 882);
				break;
			case 6:
				v2 = idx22mapAttribute(v0, 883);
				v9 = idx22mapAttribute(v0, 884);
				break;
			case 7:
				v2 = idx22mapAttribute(v0, 885);
				v9 = idx22mapAttribute(v0, 886);
				break;
			case 8:
				v2 = idx22mapAttribute(v0, 887);
				v9 = idx22mapAttribute(v0, 888);
				break;
			case 9:
				v2 = idx22mapAttribute(v0, 889);
				v9 = idx22mapAttribute(v0, 890);
				break;
			case 10:
				v2 = idx22mapAttribute(v0, 891);
				v9 = idx22mapAttribute(v0, 892);
				break;
			case 11:
				v2 = idx22mapAttribute(v0, 893);
				v9 = idx22mapAttribute(v0, 894);
				break;
			default:
				return;
		}
		if (v2 != -1 && v9 != 0 && cs2method_10338(v2) < v9) {
			v34 = cs2method_10060(v34, 1);
			if (v34 < 5) {
				if (v34 == 1 && v22 == 0) {
					v22 = -1;
				}
				globalarray_0[cs2method_10461(v34, 1)] = idx17mapData('S', 'i', 1482, v2);
				globalarray_0[cs2method_10461(v34, 1)] = v9;
			} else {
				globalarray_0[3] = cs2method_10461(v34, 3);
			}
		}
	}
	for (object v4 = "null", object v18 = "null", object v29 = "null", object v15 = "null", int v10 = 0, int v19 = 0, int v21 = -1, int v33 = -1; v19 < 12; v19 = cs2method_10060(v19, 1)) {
		int v37;
		switch (v19) {
			case 0:
				v37 = idx22mapAttribute(v0, 859);
				break;
			case 1:
				v37 = idx22mapAttribute(v0, 860);
				break;
			case 2:
				v37 = idx22mapAttribute(v0, 861);
				break;
			case 3:
				v37 = idx22mapAttribute(v0, 862);
				break;
			case 4:
				v37 = idx22mapAttribute(v0, 863);
				break;
			case 5:
				v37 = idx22mapAttribute(v0, 864);
				break;
			case 6:
				v37 = idx22mapAttribute(v0, 865);
				break;
			case 7:
				v37 = idx22mapAttribute(v0, 866);
				break;
			case 8:
				v37 = idx22mapAttribute(v0, 867);
				break;
			case 9:
				v37 = idx22mapAttribute(v0, 868);
				break;
			case 10:
				v37 = idx22mapAttribute(v0, 869);
				break;
			case 11:
				v37 = idx22mapAttribute(v0, 870);
				break;
			default:
				return;
		}
		if (v37 != -1) {
			int v36 = idx17mapData('i', 'J', 2252, v37);
			if (v36 != -1 && script_2193(idx22mapAttribute(v36, 847)) != 2) {
				if (v22 == 0) {
					v22 = -1;
				}
				v10 = cs2method_10060(v10, 1);
				switch (v10) {
					case 1:
						v4 = idx22mapAttribute(v36, 845);
						break;
					case 2:
						v18 = idx22mapAttribute(v36, 845);
						break;
					case 3:
						v29 = idx22mapAttribute(v36, 845);
						break;
					case 4:
						v15 = idx22mapAttribute(v36, 845);
						break;
					default:
						v15 = (string)cs2method_10379(cs2method_10461(v10, 3)) + " More";
				}
			}
		}
	}
	int v32 = -1;
	if (idx22mapAttribute(v0, 898) > 0 && script_2194(v11) == 0) {
		v32 = 1;
	}
	if (idx22mapAttribute(v0, 895) > 0 && client_configs['cfg1297'] < idx22mapAttribute(v0, 895)) {
		v32 = 1;
	}
	if (idx22mapAttribute(v0, 896) > 0 && script_1432() < idx22mapAttribute(v0, 896)) {
		v32 = 1;
	}
	if (idx22mapAttribute(v0, 897) > 0 && cs2method_10060(cs2method_10338(0), cs2method_10338(2)) < 130) {
		v32 = 1;
	}
	int v14 = 0;
	int v28 = 200;
	int v17 = 50;
	int v6 = 50;
	int v3 = 0;
	int v25 = 0;
	int v1 = 0;
	int v16 = 1;
	if (cs2method_10846(v30, "null") != 0 && cs2method_10846(v30, "") != 0) {
		cs2method_10606(v7, 4, v14);
		cs2method_10063(4, v3, 0, 0);
		cs2method_10013(cs2method_10051(2, 4), script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17811, 0, v30), 1, 0);
		cs2method_10797(v30);
		cs2method_10692(17811);
		cs2method_10811(11456736);
		cs2method_11105(0, 1, 0);
		int v36 = cs2method_10060(v14, 1);
		int v37 = cs2method_10060(cs2method_10060(v3, cs2method_10664()), cs2method_10051(2, 2));
		cs2method_10606(v7, 9, v36);
		cs2method_10063(0, v37, 0, 0);
		cs2method_10013(0, 0, 1, 0);
		cs2method_10811(0);
		int v38 = cs2method_10060(v36, 1);
		int v39 = cs2method_10060(v37, 1);
		cs2method_10606(v7, 9, v38);
		cs2method_10063(0, v39, 0, 0);
		cs2method_10013(0, 0, 1, 0);
		cs2method_10811(4281695);
		v14 = cs2method_10060(v38, 1);
		v3 = cs2method_10060(cs2method_10060(v39, 1), cs2method_10051(2, 2));
	}
	if (cs2method_10846(v5, "null") != 0 && cs2method_10846(v5, "") != 0 && v23 != -1) {
		cs2method_10606(v7, 5, v14);
		cs2method_10013(v17, v6, 0, 0);
		cs2method_10063(4, v3, 0, 0);
		cs2method_10310(v23);
		int v39 = cs2method_10060(cs2method_10060(cs2method_10878(), cs2method_10488()), 4);
		int v36 = cs2method_10060(v14, 1);
		cs2method_10606(v7, 4, v36);
		cs2method_10063(v39, v3, 0, 0);
		cs2method_10797(v5);
		int v38 = script_10019(cs2method_10461(cs2method_10461(v28, v39), 4), 17813, 0, cs2method_10447());
		int v37 = cs2method_11048(v38, v6);
		cs2method_10013(cs2method_10060(v39, 4), v37, 1, 0);
		cs2method_10692(17813);
		cs2method_10811(7705248);
		cs2method_11105(0, 0, 0);
		v14 = cs2method_10060(v36, 1);
		v3 = cs2method_10060(cs2method_10060(v3, cs2method_10664()), cs2method_10051(2, 2));
	}
	cs2method_10606(v7, 4, v14);
	cs2method_10063(4, cs2method_10060(v3, 8), 0, 0);
	cs2method_10797("Status:");
	cs2method_10692(17813);
	cs2method_10811(7705248);
	cs2method_11105(0, 1, 0);
	v14 = cs2method_10060(v14, 1);
	cs2method_10606(v7, 4, v14);
	cs2method_10063(4, cs2method_10060(v3, 8), 2, 0);
	if (idx22mapAttribute(v0, 856) == 1 && cs2method_10210() == 0) {
		cs2method_10797("Members-only");
	} else if (v32 == 1 && v22 < 1) {
		cs2method_10797("See Quest Log");
	} else {
		switch (v22) {
			case 2:
				cs2method_10797("Completed");
				break;
			case 1:
				cs2method_10797("In Progress");
				break;
			case 0:
				cs2method_10797("Ready to Start");
				break;
			default:
				cs2method_10797("Locked");
		}
	}
	cs2method_10692(17813);
	cs2method_10811(16777215);
	cs2method_11105(2, 1, 0);
	v14 = cs2method_10060(v14, 1);
	int v12 = cs2method_11048(script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()), script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()));
	cs2method_10013(cs2method_10051(2, 4), v12, 1, 0);
	cs2method_10013(cs2method_10051(2, 4), v12, 1, 0);
	if (idx22mapAttribute(v0, 856) == 1 && cs2method_10210() == 0) {
		cs2method_10606(v7, 5, v14);
		cs2method_10013(40, 37, 0, 0);
		cs2method_10063(cs2method_10060(cs2method_10060(cs2method_10509(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, cs2method_10447()), 4), 4), cs2method_10461(cs2method_10060(cs2method_10060(v3, 8), cs2method_10968(v12, 2)), cs2method_10968(cs2method_10664(), 2)), 2, 0);
		cs2method_10310(21354);
		v14 = cs2method_10060(v14, 1);
	}
	cs2method_10606(v7, 3, v14);
	cs2method_10063(0, v3, 0, 0);
	cs2method_10013(0, cs2method_10060(v12, cs2method_10051(2, 8)), 1, 0);
	cs2method_10258();
	cs2method_10238(1);
	if (v16 == 1) {
		cs2method_10811(464928);
	} else {
		cs2method_10811(1846324);
	}
	v16 = cs2method_10038(cs2method_10060(v16, 1), 2);
	int v24 = cs2method_10060(v14, 1);
	v3 = cs2method_10060(cs2method_10060(v3, cs2method_10664()), 2);
	cs2method_10606(v7, 4, v24);
	cs2method_10063(4, cs2method_10060(v3, 8), 0, 0);
	cs2method_10797("Difficulty:");
	cs2method_10692(17813);
	cs2method_10811(7705248);
	cs2method_11105(0, 1, 0);
	v14 = cs2method_10060(v24, 1);
	cs2method_10606(v7, 4, v14);
	cs2method_10063(4, cs2method_10060(v3, 8), 2, 0);
	switch (v27) {
		case 0:
			cs2method_10797("Novice");
			break;
		case 1:
			cs2method_10797("Intermediate");
			break;
		case 2:
			cs2method_10797("Experienced");
			break;
		case 3:
			cs2method_10797("Master");
			break;
		case 4:
			cs2method_10797("Grandmaster");
			break;
		case 5:
			cs2method_10797("Multi-difficulty");
	}
	cs2method_10692(17813);
	cs2method_10811(16777215);
	cs2method_11105(2, 1, 0);
	v14 = cs2method_10060(v14, 1);
	int v13 = cs2method_11048(script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()), script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()));
	cs2method_10013(cs2method_10051(2, 4), v13, 1, 0);
	cs2method_10013(cs2method_10051(2, 4), v13, 1, 0);
	cs2method_10606(v7, 3, v14);
	cs2method_10063(0, v3, 0, 0);
	cs2method_10013(0, cs2method_10060(v13, cs2method_10051(2, 8)), 1, 0);
	cs2method_10258();
	cs2method_10238(1);
	if (v16 == 1) {
		cs2method_10811(464928);
	} else {
		cs2method_10811(1846324);
	}
	v16 = cs2method_10038(cs2method_10060(v16, 1), 2);
	v14 = cs2method_10060(v14, 1);
	v3 = cs2method_10060(cs2method_10060(v3, cs2method_10664()), 2);
	int v8 = 0;
	if (v34 > 0) {
		int v39 = 0;
		cs2method_10606(v7, 3, v14);
		cs2method_10063(0, v3, 0, 0);
		cs2method_10238(1);
		if (v16 == 1) {
			cs2method_10811(464928);
		} else {
			cs2method_10811(1846324);
		}
		v16 = cs2method_10038(cs2method_10060(v16, 1), 2);
		int v37 = cs2method_10060(v14, 1);
		int v43 = cs2method_10060(v3, 8);
		cs2method_10606(v7, 4, v37);
		cs2method_10063(4, v43, 0, 0);
		cs2method_10797("Level Requirements:");
		cs2method_10013(cs2method_10051(2, 4), script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()), 1, 0);
		cs2method_10692(17813);
		cs2method_10811(7705248);
		cs2method_11105(0, 1, 0);
		v14 = cs2method_10060(v37, 1);
		int v36 = cs2method_10060(cs2method_10060(v43, cs2method_10664()), 8);
		v3 = cs2method_10060(v36, 1);
		int v38 = 35;
		int v40 = 35;
		int v42 = cs2method_10968(cs2method_10461(cs2method_10461(v28, cs2method_10051(2, 4)), cs2method_10051(4, cs2method_10060(v38, 1))), 3);
		int v41 = 4;
		while (v39 < v34 && v39 < 4) {
			if (v39 < 3 || v34 == 4) {
				cs2method_10606(v7, 5, v14);
				cs2method_10063(v41, cs2method_10461(v3, 1), 0, 0);
				cs2method_10013(cs2method_10060(v38, 1), cs2method_10060(v40, 1), 0, 0);
				cs2method_10310(18269);
				v14 = cs2method_10060(v14, 1);
			}
			cs2method_10606(v7, 5, v14);
			cs2method_10063(v41, v3, 0, 0);
			cs2method_10013(v38, v40, 0, 0);
			if (v39 == 3 && v34 > 4) {
				cs2method_10310(20733);
			} else {
				cs2method_10310(idx17mapData('i', 'd', 8621, globalarray_0[v39]));
			}
			v14 = cs2method_10060(v14, 1);
			cs2method_10606(v7, 4, v14);
			cs2method_10063(v41, cs2method_10060(cs2method_10060(v3, v40), 2), 0, 0);
			if (v39 == 3 && v34 > 4) {
				cs2method_10797((string)cs2method_10379(globalarray_1[v39]) + " More");
			} else {
				cs2method_10797("Lvl " + (string)cs2method_10379(globalarray_1[v39]));
			}
			cs2method_11105(1, 1, 0);
			cs2method_10013(cs2method_10060(v38, 1), idx17mapData('f', 'i', 8630, 17813), 0, 0);
			cs2method_10692(17813);
			cs2method_10811(16777215);
			v14 = cs2method_10060(v14, 1);
			v41 = cs2method_10060(cs2method_10060(cs2method_10060(v41, v38), 1), v42);
			v39 = cs2method_10060(v39, 1);
		}
		v3 = cs2method_10060(cs2method_10060(cs2method_10060(cs2method_10060(cs2method_10060(v3, v40), 2), cs2method_10664()), 8), 2);
		cs2method_10013(0, cs2method_10461(cs2method_10461(v3, 2), cs2method_10406()), 1, 0);
	}
	if (v10 > 0) {
		int v38 = 0;
		cs2method_10606(v7, 3, v14);
		cs2method_10063(0, v3, 0, 0);
		cs2method_10238(1);
		if (v16 == 1) {
			cs2method_10811(464928);
		} else {
			cs2method_10811(1846324);
		}
		v16 = cs2method_10038(cs2method_10060(v16, 1), 2);
		int v41 = cs2method_10060(v14, 1);
		int v37 = cs2method_10060(v3, 8);
		cs2method_10606(v7, 4, v41);
		cs2method_10063(4, v37, 0, 0);
		cs2method_10797("Prerequisites:");
		cs2method_10013(cs2method_10051(2, 4), script_10019(cs2method_10461(v28, cs2method_10051(2, 4)), 17813, 0, cs2method_10447()), 1, 0);
		cs2method_10692(17813);
		cs2method_10811(7705248);
		cs2method_11105(0, 1, 0);
		v14 = cs2method_10060(v41, 1);
		v3 = cs2method_10060(cs2method_10060(v37, cs2method_10664()), 8);
		int v42 = 16;
		int v36 = 16;
		int v39 = cs2method_10060(cs2method_10060(4, v42), 4);
		while (v38 < v10 && v38 < 4) {
			cs2method_10606(v7, 5, v14);
			cs2method_10063(4, v3, 0, 0);
			cs2method_10013(v42, v36, 0, 0);
			if (v38 == 3 && v10 > 4) {
				cs2method_10310(20732);
			} else {
				cs2method_10310(21342);
			}
			v14 = cs2method_10060(v14, 1);
			cs2method_10606(v7, 4, v14);
			cs2method_10063(v39, v3, 0, 0);
			switch (v38) {
				case 0:
					cs2method_10797(v4);
					break;
				case 1:
					cs2method_10797(v18);
					break;
				case 2:
					cs2method_10797(v29);
					break;
				case 3:
					cs2method_10797(v15);
			}
			int v40 = script_10019(cs2method_10461(cs2method_10461(v28, v39), 4), 17813, 0, cs2method_10447());
			if (v40 < v36) {
				v40 = v36;
				cs2method_11105(0, 1, 0);
			} else {
				cs2method_11105(0, 0, 0);
			}
			cs2method_10013(cs2method_10060(v39, 4), v40, 1, 0);
			cs2method_10692(17813);
			cs2method_10811(16777215);
			v14 = cs2method_10060(v14, 1);
			v3 = cs2method_10060(cs2method_10060(v3, cs2method_10664()), 2);
			v38 = cs2method_10060(v38, 1);
		}
		v3 = cs2method_10060(v3, 8);
		cs2method_10013(0, cs2method_10461(cs2method_10461(v3, 2), cs2method_10406()), 1, 0);
	}
	cs2method_10283(v28, cs2method_10461(v3, 2), 0, 0, v7);
	return;
}
