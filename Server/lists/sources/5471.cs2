/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_5471(int a0) {
	int v0 = script_284(cs2method_10472());
	if (a0 == 0) {
		cs2method_11031(0, 4);
		cs2method_11031(1, 4);
		cs2method_10971(0, 0, cs2method_10327(v0, 38, 2, 41), 2300, cs2method_10327(v0, 35, 2, 41), 2300, 0);
		cs2method_10971(1, 0, cs2method_10327(v0, 38, 2, 36), 1300, cs2method_10327(v0, 37, 2, 36), 1300, 0);
		cs2method_10971(0, 1, cs2method_10327(v0, 31, 2, 36), 2200, cs2method_10327(v0, 30, 2, 34), 2200, 0);
		cs2method_10971(1, 1, cs2method_10327(v0, 36, 2, 34), 1400, cs2method_10327(v0, 36, 2, 33), 1400, 0);
		cs2method_10971(0, 2, cs2method_10327(v0, 31, 2, 28), 2100, cs2method_10327(v0, 32, 2, 26), 2100, 0);
		cs2method_10971(1, 2, cs2method_10327(v0, 36, 2, 31), 1400, cs2method_10327(v0, 36, 2, 30), 1400, 0);
		cs2method_10971(0, 3, cs2method_10327(v0, 38, 2, 24), 1900, cs2method_10327(v0, 40, 2, 24), 1900, 0);
		cs2method_10971(1, 3, cs2method_10327(v0, 38, 2, 29), 1400, cs2method_10327(v0, 39, 2, 29), 1400, 0);
	} else if (a0 == 1) {
		cs2method_11031(0, 4);
		cs2method_11031(1, 4);
		cs2method_10971(0, 0, cs2method_10327(v0, 34, 2, 41), 2400, cs2method_10327(v0, 32, 2, 40), 2400, 0);
		cs2method_10971(1, 0, cs2method_10327(v0, 38, 2, 36), 1300, cs2method_10327(v0, 37, 2, 36), 1300, 0);
		cs2method_10971(0, 1, cs2method_10327(v0, 30, 2, 36), 2300, cs2method_10327(v0, 29, 2, 34), 2300, 0);
		cs2method_10971(1, 1, cs2method_10327(v0, 36, 2, 34), 1400, cs2method_10327(v0, 36, 2, 33), 1400, 0);
		cs2method_10971(0, 2, cs2method_10327(v0, 30, 2, 29), 2200, cs2method_10327(v0, 31, 2, 27), 2200, 0);
		cs2method_10971(1, 2, cs2method_10327(v0, 36, 2, 31), 1400, cs2method_10327(v0, 36, 2, 30), 1400, 0);
		cs2method_10971(0, 3, cs2method_10327(v0, 34, 2, 25), 2000, cs2method_10327(v0, 35, 2, 25), 2000, 0);
		cs2method_10971(1, 3, cs2method_10327(v0, 38, 2, 29), 1400, cs2method_10327(v0, 39, 2, 29), 1400, 0);
	} else if (a0 == 2) {
		cs2method_11031(0, 6);
		cs2method_11031(1, 6);
		cs2method_10971(0, 0, cs2method_10327(v0, 32, 2, 45), 2000, cs2method_10327(v0, 28, 2, 45), 2000, 0);
		cs2method_10971(1, 0, cs2method_10327(v0, 31, 2, 37), 1300, cs2method_10327(v0, 30, 2, 37), 1300, 0);
		cs2method_10971(0, 1, cs2method_10327(v0, 21, 2, 40), 2000, cs2method_10327(v0, 18, 2, 37), 2000, 0);
		cs2method_10971(1, 1, cs2method_10327(v0, 26, 2, 35), 1300, cs2method_10327(v0, 25, 2, 33), 1300, 0);
		cs2method_10971(0, 2, cs2method_10327(v0, 20, 2, 25), 2000, cs2method_10327(v0, 23, 2, 21), 2000, 0);
		cs2method_10971(1, 2, cs2method_10327(v0, 26, 2, 29), 1300, cs2method_10327(v0, 27, 2, 27), 1300, 0);
		cs2method_10971(0, 3, cs2method_10327(v0, 32, 2, 20), 2000, cs2method_10327(v0, 37, 2, 20), 2000, 0);
		cs2method_10971(1, 3, cs2method_10327(v0, 31, 2, 28), 1300, cs2method_10327(v0, 33, 2, 29), 1300, 0);
		cs2method_10971(0, 4, cs2method_10327(v0, 41, 2, 27), 2000, cs2method_10327(v0, 42, 2, 30), 2000, 0);
		cs2method_10971(1, 4, cs2method_10327(v0, 34, 2, 31), 1300, cs2method_10327(v0, 35, 2, 33), 1300, 0);
		cs2method_10971(0, 5, cs2method_10327(v0, 40, 2, 40), 2000, cs2method_10327(v0, 37, 2, 43), 2000, 0);
		cs2method_10971(1, 5, cs2method_10327(v0, 33, 2, 36), 1300, cs2method_10327(v0, 32, 2, 37), 1300, 0);
	} else {
		cs2method_11031(0, 4);
		cs2method_11031(1, 4);
		cs2method_10971(0, 0, cs2method_10327(v0, 37, 2, 41), 2200, cs2method_10327(v0, 35, 2, 40), 2200, 0);
		cs2method_10971(1, 0, cs2method_10327(v0, 41, 2, 36), 1300, cs2method_10327(v0, 40, 2, 36), 1300, 0);
		cs2method_10971(0, 1, cs2method_10327(v0, 33, 2, 36), 2100, cs2method_10327(v0, 32, 2, 34), 2100, 0);
		cs2method_10971(1, 1, cs2method_10327(v0, 39, 2, 34), 1400, cs2method_10327(v0, 39, 2, 33), 1400, 0);
		cs2method_10971(0, 2, cs2method_10327(v0, 33, 2, 29), 2000, cs2method_10327(v0, 34, 2, 27), 2000, 0);
		cs2method_10971(1, 2, cs2method_10327(v0, 39, 2, 31), 1400, cs2method_10327(v0, 39, 2, 30), 1400, 0);
		cs2method_10971(0, 3, cs2method_10327(v0, 37, 2, 25), 1800, cs2method_10327(v0, 38, 2, 25), 1800, 0);
		cs2method_10971(1, 3, cs2method_10327(v0, 41, 2, 29), 1400, cs2method_10327(v0, 42, 2, 29), 1400, 0);
	}
	cs2method_10382(0, 0, 400, 400, 1, 0);
	cs2method_20196(new function<script_5474>(int a0,int a1) {
		int v0 = cs2method_10060(a1, 1);
		if (v0 >= cs2method_10461(cs2method_10723(0), 1)) {
			cs2method_20196(new function<none>() {
			}, "", new WidgetPointer(1172,9));
		} else {
			cs2method_10382(0, v0, a0, a0, 1, v0);
			cs2method_20196(load function<5474>, v0, a0, "ii", new WidgetPointer(1172,9));
		}
		return;
	}, 0, 400, "ii", new WidgetPointer(1172,9));
	return;
}
