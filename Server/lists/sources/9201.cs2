/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


int script_9201() {
	int v0 = 1;
	int v1 = 0;
	while (v1 == 0 && v0 <= cs2method_10924(681)) {
		switch (idx17mapData('i', 'S', 681, v0)) {
			case 0:
				v1 = client_configs['cfg3304'];
				break;
			case 2:
				v1 = client_configs['cfg3305'];
				break;
			case 1:
				v1 = client_configs['cfg3306'];
				break;
			case 6:
				v1 = client_configs['cfg3307'];
				break;
			case 4:
				v1 = client_configs['cfg3308'];
				break;
			case 5:
				v1 = client_configs['cfg2850'];
				break;
			case 23:
				v1 = client_configs['cfg3309'];
				break;
			case 14:
				v1 = client_configs['cfg3310'];
				break;
			case 13:
				v1 = client_configs['cfg3311'];
				break;
			case 12:
				v1 = client_configs['cfg3312'];
				break;
			case 8:
				v1 = client_configs['cfg3313'];
				break;
			case 19:
				v1 = client_configs['cfg3314'];
				break;
			case 11:
				v1 = client_configs['cfg3315'];
				break;
			case 10:
				v1 = client_configs['cfg3316'];
				break;
			case 7:
				v1 = client_configs['cfg3317'];
				break;
			case 24:
				v1 = client_configs['cfg3318'];
				break;
			case 18:
				v1 = client_configs['cfg3319'];
				break;
			case 20:
				v1 = client_configs['cfg3320'];
				break;
			case 21:
				v1 = client_configs['cfg3321'];
				break;
			case 17:
				v1 = client_configs['cfg3322'];
				break;
			case 22:
				v1 = client_configs['cfg3323'];
				break;
			case 3:
				v1 = client_configs['cfg3324'];
				break;
			case 16:
				v1 = client_configs['cfg3325'];
				break;
			case 9:
				v1 = client_configs['cfg3326'];
				break;
			case 15:
				v1 = client_configs['cfg3327'];
				break;
			case 25:
				v1 = client_configs['cfg3836'];
		}
		v0 = cs2method_10060(v0, 1);
	}
	if (v1 > 0) {
		return 1;
	}
	return 0;
}
