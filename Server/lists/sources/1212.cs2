/* 
 * Script decompiled by jagdecs2 v3.2
 * Decompiler opts:
 * --------------
 * t1LocalAnalyzer:true
 * t2LocalAnalyzer:true
 * beautifier:true
 * --------------
 * Made by mgi125 ;)
 */


void script_1212(int a0,object a1,int a2) {
	cs2method_10273(96797087);
	cs2method_10273(77135872);
	int v3 = 0;
	cs2method_10606(96797087, 5, v3);
	cs2method_10063(0, 0, 1, 1);
	cs2method_10013(20, 22, 1, 1);
	cs2method_10577(1);
	int v1 = cs2method_10060(v3, 1);
	cs2method_10606(96797087, 5, v1);
	cs2method_10013(10, 22, 0, 1);
	cs2method_10063(0, 0, 0, 1);
	cs2method_10577(1);
	int v2 = cs2method_10060(v1, 1);
	cs2method_10606(96797087, 5, v2);
	cs2method_10013(10, 22, 0, 1);
	cs2method_10063(0, 0, 2, 1);
	cs2method_10577(1);
	int v8 = cs2method_10060(v2, 1);
	cs2method_10606(96797087, 5, v8);
	cs2method_10013(20, 11, 1, 0);
	cs2method_10063(0, 0, 1, 0);
	cs2method_10577(1);
	int v5 = cs2method_10060(v8, 1);
	cs2method_10606(96797087, 5, v5);
	cs2method_10013(20, 11, 1, 0);
	cs2method_10063(0, 0, 1, 2);
	cs2method_10577(1);
	int v4 = cs2method_10060(v5, 1);
	cs2method_10606(96797087, 5, v4);
	cs2method_10013(10, 11, 0, 0);
	cs2method_10063(0, 0, 2, 0);
	int v10 = cs2method_10060(v4, 1);
	cs2method_10606(96797087, 5, v10);
	cs2method_10013(10, 11, 0, 0);
	cs2method_10063(0, 0, 0, 0);
	int v11 = cs2method_10060(v10, 1);
	cs2method_10606(96797087, 5, v11);
	cs2method_10013(10, 11, 0, 0);
	cs2method_10063(0, 0, 0, 2);
	int v6 = cs2method_10060(v11, 1);
	cs2method_10606(96797087, 5, v6);
	cs2method_10013(10, 11, 0, 0);
	cs2method_10063(0, 0, 2, 2);
	int v9 = cs2method_10060(v6, 1);
	cs2method_10606(96797087, 4, v9);
	cs2method_10013(22, 20, 1, 1);
	cs2method_10063(0, 0, 1, 1);
	cs2method_10692(496);
	cs2method_10811(15458492);
	cs2method_11105(1, 1, 15);
	cs2method_10173(0);
	cs2method_10797(a1);
	int v7 = cs2method_10060(v9, 1);
	int v0 = 0;
	while (v0 < 9) {
		if (cs2_configs['cfg1700'] == -1 || cs2_configs['cfg1700'] == 0) {
			switch (v0) {
				case 0:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8515);
					}
					break;
				case 1:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8514);
					}
					break;
				case 2:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8516);
					}
					break;
				case 3:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8512);
					}
					break;
				case 4:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8518);
					}
					break;
				case 5:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8513);
					}
					break;
				case 6:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8511);
					}
					break;
				case 7:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8517);
					}
					break;
				case 8:
					if (cs2method_11038(96797087, v0) == 1) {
						cs2method_10310(8519);
					}
			}
			v0 = cs2method_10060(v0, 1);
		} else {
			if (cs2_configs['cfg1700'] == 1) {
				switch (v0) {
					case 0:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8524);
						}
						break;
					case 1:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8523);
						}
						break;
					case 2:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8525);
						}
						break;
					case 3:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8521);
						}
						break;
					case 4:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8527);
						}
						break;
					case 5:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8522);
						}
						break;
					case 6:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8520);
						}
						break;
					case 7:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8526);
						}
						break;
					case 8:
						if (cs2method_11038(96797087, v0) == 1) {
							cs2method_10310(8528);
						}
				}
				v0 = cs2method_10060(v0, 1);
			}
		}
	}
	return;
}
